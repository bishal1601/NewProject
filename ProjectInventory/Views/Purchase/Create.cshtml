@model PurchaseVm


@{
    ViewData["Title"] = "Purchase";
    var productUnitJson = Json.Serialize(Model.ProductUnitMap);
    var productsJson = Json.Serialize(Model.Products);
}

<form asp-action="Create" method="post">
    <div class="container bg-white p-4 rounded shadow-sm mt-4" style="max-width: 100%;">
        <h3 class="mb-4 text-center text-primary">Create Purchase</h3>

        <div class="row mb-4">
            <div class="col-md-4">
                <label asp-for="InvoiceNumber" class="form-label">Invoice No.</label>
                <input asp-for="InvoiceNumber" class="form-control" required min="1" />
            </div>
            <div class="col-md-4">
                <label asp-for="StakeholderId" class="form-label">Vendor</label>
                <select asp-for="StakeholderId" class="form-select product-select" asp-items="Model.StakeHolders" required>
                    <option value="">Select</option>
                </select>
            </div>
            <div class="col-md-4">
                <label asp-for="TransactionDate" class="form-label">Date</label>
                <input asp-for="TransactionDate" type="date" class="form-control" />
            </div>
        </div>

        <h5 class="text-secondary mb-3">Stock Movements</h5>

        <table class="table table-bordered align-middle text-center" id="stock-movement-table">
            <thead class="table-light">
                <tr>
                    <th style="width: 25%;">Product</th>
                    <th>Unit</th>
                    <th>Qty</th>
                    <th>Rate</th>
                    <th>Amount</th>
                    <th>VAT (%)</th>
                    <th>VAT Amt</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="movement-body">
            
            
            </tbody>
        </table>

        <div class="row mb-4">
            <div class="col-12 d-flex justify-content-end">
                <button type="button" class="btn btn-outline-primary" id="add-row">+ Add Item</button>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-2">
                <label asp-for="TotalAmount" class="form-label fw-semibold">Sub Total</label>
                <input asp-for="TotalAmount" name="Amount" class="form-control" readonly />
            </div>
            <div class="col-md-2">
                <label asp-for="TaxableAmount" class="form-label">Taxable Amount</label>
                <input asp-for="TaxableAmount" class="form-control" readonly/>
            </div>
            <div class="col-md-2">
                <label asp-for="TaxAmount" class="form-label">VAT Amount</label>
                <input asp-for="TaxAmount" class="form-control" readonly/>
            </div>
            <div class="col-md-3">
                <label asp-for="DiscountAmount" class="form-label">Discount</label>
                <input asp-for="DiscountAmount" class="form-control discount"/>
            </div>
            <div class="col-md-3">
                <label asp-for="TotalAmount" class="form-label">Total (with VAT)</label>
                <input asp-for="TotalAmount" class="form-control" readonly/>
            </div>
        </div>

        <div>
            <label asp-for="Description" class="form-label">Remarks</label>
            <textarea asp-for="Description" class="form-control" rows="3"></textarea>
        </div>

        <div class="d-grid mt-3">
            <button type="submit" class="btn btn-outline-success">Save</button>
        </div>
    </div>
</form>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
    <script>
        let index = 0;
        const productUnitMap = @Html.Raw(productUnitJson);
        const products = @Html.Raw(productsJson);

        function getProductOptions() {
            return products.map(p => `<option value="${p.value}">${p.text}</option>`).join('');
        }

        function addRow() {
            const row = `
                <tr>
                    <td>
                        <select name="StockMovements[${index}].ProductId" class="form-select product-select" required>
                            <option value="">Select</option>
                            ${getProductOptions()}
                        </select>
                    </td>
                    <td>
                        <input type="text" class="form-control unit-text" readonly />
                    </td>
                    <td>
                        <input type="number" name="StockMovements[${index}].Quantity" class="form-control quantity" value="0" step="0.01" min="0.1" required />
                    </td>
                    <td>
                        <input type="number" name="StockMovements[${index}].Rate" class="form-control rate" value="0" step="0.01" min="0" required />
                    </td>
                    <td>
                        <input type="text" class="form-control amount" readonly value="0.00" />
                    </td>
                    <td>
                        <input type="number" name="StockMovements[${index}].VatPercentage" class="form-control vat-percentage" value="13" step="0.01" min="0" required />
                    </td>
                    <td>
                        <input type="text" class="form-control vat-amount" readonly value="0.00" />
                    </td>
                    <td>
                        <input type="text" class="form-control row-total" readonly value="0.00" />
                    </td>
                    <td>
                        <button type="button" class="btn btn-sm btn-danger remove-row">X</button>
                    </td>
                </tr>`;
            $("#movement-body").append(row);
            index++;
        }

        function calculateRow(row) {
            const qty = parseFloat(row.find(".quantity").val()) || 0;
            const rate = parseFloat(row.find(".rate").val()) || 0;
            const vatPercent = parseFloat(row.find(".vat-percentage").val()) || 0;
            const discount = parseFloat(row.find(".discount").val()) || 0;

            const amount = qty * rate;
            const vatAmt = (amount * vatPercent) / 100;
            const total = amount + vatAmt - discount;

            row.find(".amount").val(amount.toFixed(2));
            row.find(".vat-amount").val(vatAmt.toFixed(2));
            row.find(".row-total").val(total.toFixed(2));
        }

        function calculateAmount() {
            let subTotal = 0;
            let tax = 0;

            $("#movement-body tr").each(function () {
                const row = $(this);
                calculateRow(row);

                const amount = parseFloat(row.find(".amount").val()) || 0;
                const vat = parseFloat(row.find(".vat-amount").val()) || 0;

                subTotal += amount;
                tax += vat;
            });

            const discount = parseFloat($(".discount").val()) || 0;
            const grandTotal = subTotal + tax - discount;

            $("input[name='Amount']").val(subTotal.toFixed(2));
            $("input[name='TaxableAmount']").val(subTotal.toFixed(2));
            $("input[name='TaxAmount']").val(tax.toFixed(2));
            $("input[name='TotalAmount']").val(grandTotal.toFixed(2));
        }


        $(document).on("change", ".product-select", function () {
            const selectedProductId = $(this).val();
            const row = $(this).closest("tr");
            const unit = productUnitMap[selectedProductId] || "";
            row.find(".unit-text").val(unit);
        });

        $(document).on("click", "#add-row", function () {
            addRow();
        });

        $(document).on("click", ".remove-row", function () {
            $(this).closest("tr").remove();
            reindexRows();
            calculateAmount();
        });

        $(document).on("input", ".quantity, .discount, .rate, .vat-percentage", function () {
            const row = $(this).closest("tr");
            calculateRow(row);
            calculateAmount();
        });

        function reindexRows() {
            $("#movement-body tr").each(function (i) {
                $(this).find("select, input").each(function () {
                    const name = $(this).attr("name");
                    if (name) {
                        const newName = name.replace(/\[\d+\]/, `[${i}]`);
                        $(this).attr("name", newName);
                    }
                });
            });
            index = $("#movement-body tr").length;
        }

        $(document).ready(function () {
            addRow();
        });
        

    </script>
}
